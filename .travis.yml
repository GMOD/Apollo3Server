sudo: true
dist: xenial

language: groovy

jdk:
  - openjdk8
  - openjdk11

#python:
#  - 3.8
before_install:
  - sudo apt-get -y install python3-venv
  - pyenv update
  - pyenv global 3.8.1
  - python --version
  - python3 --version
  - pip install -U pip
  - pip install nose

env:
  #  - DB=postgres TEST_SUITE=apollo
  #  - DB=mysql TEST_SUITE=apollo
  - TEST_SUITE=apollo
  - TEST_SUITE=python-apollo
#
#python:
#  - "3.7"

addons:
  chrome: stable
  apt:
    update: true
#   postgresql: "9.3"

#install:
#  - true

#services:
# - postgresql
#- mysql

before_script:
  - "echo $JAVA_OPTS"
  - "export JAVA_OPTS='-Xmx2048m'"
  - "echo $JAVA_OPTS"
#  - if [ ${DB} == "mysql" ]; then cp src/integration-test/groovy/resources/travis/mysql.travis apollo-config.groovy; mysql -u root -e 'SET GLOBAL interactive_timeout=28800;'; mysql -u root -e 'SET GLOBAL wait_timeout=28800;'; mysql -u root -e 'SET GLOBAL connect_timeout=28800;';  mysql -u root -e 'create database apollo'; fi;
#  - if [ ${DB} == "postgres" ]; then cp src/integration-test/groovy/resources/travis/postgres.travis apollo-config.groovy; psql -c 'create database apollo;' -U postgres; psql -c 'create database apollo_chado' -U postgres; gunzip -c scripts/chado-schema-with-ontologies.sql.gz | psql -U postgres -h localhost -d apollo_chado; fi;
#   - if [ ${DB} == "postgres" ]; then cp src/integration-test/groovy/resources/travis/postgres.travis apollo-config.groovy; psql -c 'create database apollo;' -U postgres;  fi;

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock


cache:
  directories:
    - extlib/
    - $HOME/.grails/
    - $HOME/.m2/
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

script: "./src/integration-test/groovy/resources/travis/run-travis.sh"

